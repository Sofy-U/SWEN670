# Configure Thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.application.name=VLOL

# ==============================================================
# = Data Source
# ==============================================================
# spring.datasource.url=jdbc:h2:mem:vloldb;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.url=jdbc:h2:file:./vloldb;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password =

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql=true

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto=update

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# ==============================================================
# = The SQL driver setup for datasource
# ==============================================================
spring.datasource.driverClassName=org.h2.Driver

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from vlol_user where email=?
# spring.queries.roles-query=select u.email, r.role from vlol_user u inner join user_role ur on(u.user_id=ur.user_id) inner join vlol_role r on(ur.role_id=r.role_id) where u.email=?
spring.queries.roles-query=select u.email, r.title from vlol_user u inner join vlol_role r on(u.role_id=r.role_id) where u.email=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always
server.port=5000
server.error.whitelabel.enabled=false
server.error.include-stacktrace=always